/**
 * Cassandra protocol
 */
@namespace("org.apache.cassandra.avro")

protocol Cassandra {
    enum AccessLevel {
        NONE, READONLY, READWRITE, FALL
    }

    record ColumnPath {
        string column_family;
        union { bytes, null } super_column;
        union { bytes, null } column;
    }

    record ColumnParent {
        string column_family;
        union { bytes, null } super_column;
    }

    record Clock {
        long timestamp;
    }

    record Column {
        bytes name;
        bytes value;
        Clock clock;
        union { int, null } ttl;
    }

    record SuperColumn {
        bytes name;
        array<Column> columns;
    }

    record ColumnOrSuperColumn {
        union { Column, null } column;
        union { SuperColumn, null } super_column;
    }

    record SliceRange {
        bytes start;
        bytes finish;
        boolean reversed;
        int count;
        array<bytes> bitmasks;
    }

    record SlicePredicate {
        union { array<bytes>, null } column_names;
        union { SliceRange, null } slice_range;
    }

    record Deletion {
        Clock clock;
        union { bytes, null } super_column;
        union { SlicePredicate, null } predicate;
    }

    record Mutation {
        union { ColumnOrSuperColumn, null } column_or_supercolumn;
        union { Deletion, null } deletion;
    }

    record CfDef {
        string keyspace;
        string name;
        union { string, null } column_type;
        union { string, null } clock_type;
        union { string, null } comparator_type;
        union { string, null } subcomparator_type;
        union { string, null } comment;
        union { double, null } row_cache_size;
        union { boolean, null } preload_row_cache;
        union { double, null } key_cache_size;
    }

    record KsDef {
        string name;
        string strategy_class;
        int replication_factor;
        array<CfDef> cf_defs;
    } 

    enum ConsistencyLevel {
        ZERO, ONE, QUORUM, DCQUORUM, DCQUORUMSYNC, ALL
    }

    error InvalidRequestException {
        union { string, null } why;
    }

    error NotFoundException {
        union { string, null } why;
    }

    error UnavailableException {
        union { string, null } why;
    }

    error TimedOutException {
        union { string, null } why;
    }

    ColumnOrSuperColumn get(bytes key,
                            ColumnPath column_path,
                            ConsistencyLevel consistency_level)
    throws InvalidRequestException, NotFoundException, UnavailableException,
           TimedOutException;

    void insert(bytes key,
                ColumnParent column_parent,
                Column column,
                ConsistencyLevel consistency_level)
    throws InvalidRequestException, UnavailableException, TimedOutException;
    
    void remove(bytes key,
                ColumnPath column_path,
                Clock clock,
                ConsistencyLevel consistency_level)
    throws InvalidRequestException, UnavailableException, TimedOutException;

    void batch_mutate(string keyspace,
                      map<map<array<Mutation>>> mutation_map,
                      ConsistencyLevel consistency_level)
    throws InvalidRequestException, UnavailableException, TimedOutException;

    void system_add_keyspace(KsDef ks_def) throws InvalidRequestException;

    void set_keyspace(string keyspace) throws InvalidRequestException;

    array<string> describe_keyspaces();

    string describe_cluster_name();

    string describe_version();
}
